/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Admin.jframe;

import static Admin.jframe.EditManu.manu;
import Students.Student;
import java.sql.*;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author USER
 */
public class Admission_preview extends javax.swing.JFrame {

    public static Admission_preview preview;
    public Admission_preview() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
//    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        check = new javax.swing.JTextField();
        view = new javax.swing.JButton();
        back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        check.setEditable(false);
        check.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        check.setText(".");

        view.setText("View");
        view.setEnabled(false);
        view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewActionPerformed(evt);
            }
        });

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(check, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(268, 268, 268)
                        .addComponent(view))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(back)))
                .addContainerGap(178, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(check, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76)
                .addComponent(view)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addComponent(back)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    
    
    
    
    
    private void viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewActionPerformed
        try {
            preview.setVisible(false);
            view();
        } catch (Exception ex) {
            Logger.getLogger(Admission_preview.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_viewActionPerformed

    
    
    
    
    
    
    
    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        preview.setVisible(false);
        Student_Management.obj.setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    
    
    
    
        public static void main(){
//        public static void d(){
        
        
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admission_preview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admission_preview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admission_preview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admission_preview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        Student obj=new Student();

            
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                preview=new Admission_preview();
                preview.setVisible(true);
                try {
                    Statement st=obj.getConnection("institute").createStatement();
                    ResultSet rs = st.executeQuery("select * from pendingstudents");
                    rs.next();
                    int in=rs.getInt("id");
                    check.setText("Studens available!");
                    view.setEnabled(true);

                } catch(Exception e)
                {
                    check.setText("DATABASE EMPTY!");
                }
            }
        });
        

    }
   
    
    
    
    // <editor-fold defaultstate="collapsed" desc="view">    
    public static void view()throws Exception {
        String usrnm="root";
        String ps="";
        try
        {
            Class.forName("com.mysql.cj.jdbc.Driver");
        }
        catch(ClassNotFoundException e)
        {
            JOptionPane.showMessageDialog(null, "Driver no found");
        }
        
        Statement st=Student.getConnection("institute").createStatement();
        try
        {
            ResultSet rs=st.executeQuery("select * from pendingstudents");
        }
        catch(Exception e)
        {
            st.executeUpdate("create table student(serialno int, id int, name varchar(15), age int(3));");
        }
        
        ResultSet rs=st.executeQuery("select nmbrOfPndng from counter where chck=390;");
        rs.next();
        int total=rs.getInt("nmbrOfPndng");

        String get="Select * from pendingstudents;";
        rs=st.executeQuery(get);
        
        Vector<Student> data=new Vector<Student>();
        while(rs.next())
        {

            Student tmp=new Student();
            tmp.program=(rs.getString("program"));
            tmp.name=(rs.getString("Name"));
            tmp.admissionId=rs.getInt("id");
            tmp.fathersName=(rs.getString("fathersName"));
            tmp.mothersName=(rs.getString("MothersName"));
            tmp.birthDate=Integer.parseInt(rs.getString("birthdate"));
            tmp.birthMonth=Integer.parseInt(rs.getString("birthmonth"));
            tmp.birthYear=Integer.parseInt(rs.getString("birthyear"));
            tmp.mobileNumber=Integer.parseInt(rs.getString("mobileNumber"));
            tmp.email=(rs.getString("email"));
            tmp.gender=(rs.getString("gender"));
            tmp.religion=(rs.getString("religion"));
            data.add(tmp);

        }

        st.close();
        rs.close();
        new PendingStudents(data).Show(data);
    }
    //</editor-fold>
    
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton back;
    private static javax.swing.JTextField check;
    private static javax.swing.JPanel jPanel1;
    private static javax.swing.JButton view;
    // End of variables declaration//GEN-END:variables
}
