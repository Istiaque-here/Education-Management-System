/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package teacher;

import Login.*;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
/**
 *
 * @author Utsho
 */
public class Teacher_menu extends javax.swing.JFrame {

    /**
     * Creates new form Teacher_menu
     */
    public Teacher_menu() {
        initComponents();
        short_name();
    }
    
    static Teacher_menu tm = new Teacher_menu();
    public static String username;
//    private String shortName = MyData.getShortName(username);
    private String shortName;
    private void short_name(){
        try{
            shortName = MyData.getShortName(username);
        }
        catch(Exception e){
            shortName = null;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPanel1 = new javax.swing.JPanel();
        teacher_panel = new javax.swing.JPanel();
        backToLogin = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        courseUpdater = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        submitResult = new javax.swing.JButton();
        mark = new javax.swing.JButton();
        attendance = new javax.swing.JButton();
        todaysClasses = new javax.swing.JButton();
        updateStudents = new javax.swing.JButton();
        coursePlan = new javax.swing.JButton();
        chengePassword = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        teacherCourse = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Teacher Workbranch");
        setBackground(new java.awt.Color(0, 153, 0));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 102, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        teacher_panel.setBackground(new java.awt.Color(255, 255, 255));
        teacher_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backToLogin.setBackground(new java.awt.Color(255, 255, 255));
        backToLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/back_button.png"))); // NOI18N
        backToLogin.setBorder(null);
        backToLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        backToLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToLoginActionPerformed(evt);
            }
        });
        teacher_panel.add(backToLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 40, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/teacher.png"))); // NOI18N
        teacher_panel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 340, 400));

        courseUpdater.setBackground(new java.awt.Color(255, 0, 51));
        courseUpdater.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                courseUpdaterAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        teacher_panel.add(courseUpdater, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 450, 120, 30));

        jPanel1.add(teacher_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 530));

        jPanel3.setBackground(new java.awt.Color(0, 204, 51));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 51));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Make the next genereation");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 420, 50));

        submitResult.setBackground(new java.awt.Color(0, 153, 153));
        submitResult.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        submitResult.setForeground(new java.awt.Color(0, 0, 0));
        submitResult.setText("Submit Result");
        submitResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitResultActionPerformed(evt);
            }
        });
        jPanel3.add(submitResult, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 470, 210, 30));

        mark.setBackground(new java.awt.Color(0, 153, 153));
        mark.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        mark.setForeground(new java.awt.Color(0, 0, 0));
        mark.setText("Mark");
        mark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                markActionPerformed(evt);
            }
        });
        jPanel3.add(mark, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 370, 210, 30));

        attendance.setBackground(new java.awt.Color(0, 153, 153));
        attendance.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        attendance.setForeground(new java.awt.Color(0, 0, 0));
        attendance.setText("Attendance");
        attendance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendanceActionPerformed(evt);
            }
        });
        jPanel3.add(attendance, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 320, 210, 30));

        todaysClasses.setBackground(new java.awt.Color(0, 153, 153));
        todaysClasses.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        todaysClasses.setForeground(new java.awt.Color(0, 0, 0));
        todaysClasses.setText("Today's Classes");
        todaysClasses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todaysClassesActionPerformed(evt);
            }
        });
        jPanel3.add(todaysClasses, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 270, 210, 30));

        updateStudents.setBackground(new java.awt.Color(0, 153, 153));
        updateStudents.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        updateStudents.setForeground(new java.awt.Color(0, 0, 0));
        updateStudents.setText("Update Students");
        updateStudents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateStudentsActionPerformed(evt);
            }
        });
        jPanel3.add(updateStudents, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, 210, 30));

        coursePlan.setBackground(new java.awt.Color(0, 153, 153));
        coursePlan.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        coursePlan.setForeground(new java.awt.Color(0, 0, 0));
        coursePlan.setText("Update Course Plan");
        coursePlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coursePlanActionPerformed(evt);
            }
        });
        jPanel3.add(coursePlan, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, 210, 30));

        chengePassword.setBackground(new java.awt.Color(0, 153, 153));
        chengePassword.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        chengePassword.setForeground(new java.awt.Color(0, 0, 0));
        chengePassword.setText("Change Password");
        chengePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chengePasswordActionPerformed(evt);
            }
        });
        jPanel3.add(chengePassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 420, 210, 30));

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        jPanel3.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 410, 30));

        teacherCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teacherCourseActionPerformed(evt);
            }
        });
        jPanel3.add(teacherCourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, 140, 50));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 0, 450, 530));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, 530));

        setSize(new java.awt.Dimension(845, 546));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backToLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToLoginActionPerformed
        this.setVisible(false);
        new Login().setVisible(true);
    }//GEN-LAST:event_backToLoginActionPerformed

    private void chengePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chengePasswordActionPerformed
        tm.setVisible(false);
        ChangePassword.changePassword();
    }//GEN-LAST:event_chengePasswordActionPerformed
   
//    public static String course_1, course_2, course_3, course_4;
    
    private void updateCourseList() throws Exception{
        try{
            ResultSet courseList = MyData.updateCombo(shortName);
            if(courseList.next()){
//                course_1 = courseList.getString("course_1");
//                course_2 = courseList.getString("course_2");
//                course_3 = courseList.getString("course_3");
//                course_4 = courseList.getString("course_4");
                
                teacherCourse.addItem(courseList.getString("course_1"));
                teacherCourse.addItem(courseList.getString("course_2"));
                teacherCourse.addItem(courseList.getString("course_3"));
                teacherCourse.addItem(courseList.getString("course_4"));
            }
            else{
                new Exception();
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "No Course Assigned");
        }
    }
    
    private void courseUpdaterAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_courseUpdaterAncestorAdded
        try{
            updateCourseList();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "No Assign Course");
        }
    }//GEN-LAST:event_courseUpdaterAncestorAdded

    private void updateStudentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateStudentsActionPerformed
       try{
           MyData.createMarkTable(String.valueOf(teacherCourse.getSelectedItem()));
           MyData.createAttendanceTable(String.valueOf(teacherCourse.getSelectedItem()));
       }
       catch(Exception e){
           JOptionPane.showMessageDialog(null, "Student Cannot Update");
       }
    }//GEN-LAST:event_updateStudentsActionPerformed

    private void attendanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendanceActionPerformed
        try{
            ResultSet studentList = MyData.getResultSet(String.valueOf(teacherCourse.getSelectedItem()), "attendance");
            MyData.columnAutoIncrease(String.valueOf(teacherCourse.getSelectedItem()), "attendance", "totalClass", "totalClass");
            while(studentList.next()){
                int todaysAttend = JOptionPane.showConfirmDialog(null, studentList.getString("id") + " " + studentList.getString("name"));
                if(todaysAttend == 0){
                    MyData.giveAttendance(String.valueOf(teacherCourse.getSelectedItem()), String.valueOf(studentList.getInt("id")), String.valueOf(studentList.getInt("total")));
                }
                else if(todaysAttend == 2){
                    break;
                }
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "No student found in this course");
        }
    }//GEN-LAST:event_attendanceActionPerformed

    private void markActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_markActionPerformed
        // Options
        String[] options = {"assignment", "tutorial_1", "midterm", "tutorial_2", "finalterm"};
        JComboBox option = new JComboBox(options);
        int choice = JOptionPane.showConfirmDialog(this, option, "Select an optoin for start marking.", JOptionPane.DEFAULT_OPTION);
        if(choice == JOptionPane.OK_OPTION){
            String col = String.valueOf(option.getSelectedItem());
            try {
                ResultSet list = MyData.getResultSet(String.valueOf(teacherCourse.getSelectedItem()), "mark");
                boolean stop = false;
                while(list.next() && stop == false){
//                    String ma = JOptionPane.showInputDialog(this, String.valueOf(list.getInt("id")) + " " + list.getString("name"), col, JOptionPane.INFORMATION_MESSAGE);
                    boolean right = true;
                    do{
                        try{
                            double thisMark = Double.valueOf(JOptionPane.showInputDialog(null, String.valueOf(list.getInt("id")) + " " + list.getString("name"), col, JOptionPane.INFORMATION_MESSAGE));
                            MyData.updateData(String.valueOf(teacherCourse.getSelectedItem()), String.valueOf(list.getInt("id")), col, String.valueOf(thisMark), "mark", "id");
                            right = true;
                        }
                        catch(Exception e){
                            right = false;
                            JOptionPane.showMessageDialog(null, "Invalid mark");
                            int temp = JOptionPane.showConfirmDialog(this, "Do you want to exit?", "Exti", JOptionPane.OK_CANCEL_OPTION);
                            if(temp == 0){
                                stop = true;
                                break;
                            }
                            else{
                                continue;
                            }
                        }
                    }while(right == false);
                }
            }
            catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Somthing went worng with Attendance-sheet");
            }
            
        }
    }//GEN-LAST:event_markActionPerformed

    private void coursePlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coursePlanActionPerformed
        String url = JOptionPane.showInputDialog("Inter your course plan link: ");
        try{
            MyData.updateData(String.valueOf(teacherCourse.getSelectedItem()), "courseplan", url);
        }
        catch(Exception e){
            // NOT IN USE
        }
    }//GEN-LAST:event_coursePlanActionPerformed

    private void submitResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitResultActionPerformed
        try{
            double attendanceMark = Double.parseDouble(JOptionPane.showInputDialog("Enter a mark for attendance: "));
            ResultSet atten = MyData.getResultSet(String.valueOf(teacherCourse.getSelectedItem()), "attendance");
            double credit = MyData.getCredit(String.valueOf(teacherCourse.getSelectedItem()));
            while(atten.next()){
//                int totalAttendance = atten.getInt("total");
                double attenMark = Double.valueOf(atten.getInt("total"))/Double.valueOf(atten.getInt("totalClass")) * attendanceMark;
//                JOptionPane.showMessageDialog(null, String.valueOf(attenMark) + " " + atten.getString("name"));
                MyData.updateData(String.valueOf(teacherCourse.getSelectedItem()), "mark", "attendance", String.valueOf(attenMark), String.valueOf(atten.getString("id")));
            }
            ResultSet res = MyData.getResultSet(String.valueOf(teacherCourse.getSelectedItem()), "mark");
            while(res.next()){
                double totalMark = res.getDouble("attendance") + res.getDouble("assignment") + res.getDouble("tutorial_1") + res.getDouble("tutorial_2") + res.getDouble("midterm") + res.getDouble("finalterm");
                int tempMark = Math.round(Float.parseFloat(String.valueOf(totalMark)));
                double cgpa;
                if(tempMark>=80) cgpa = 4.0;
                else if(tempMark>=75) cgpa = 3.75;
                else if(tempMark>=70) cgpa = 3.50;
                else if(tempMark>=65) cgpa = 3.25;
                else if(tempMark>=60) cgpa = 3.00;
                else if(tempMark>=55) cgpa = 2.75;
                else if(tempMark>=50) cgpa = 2.50;
                else if(tempMark>=45) cgpa = 2.25;
                else if(tempMark>=40){
                    cgpa = 2.00;
                    credit = 0.0;
                }
                else cgpa = 0.00;
                double temp = cgpa*credit;
                MyData.updateData("student", String.valueOf(res.getInt("id")), String.valueOf(temp), String.valueOf(credit), 0);
                MyData.updateData(String.valueOf(teacherCourse.getSelectedItem()), "mark", "cgpa", String.valueOf(cgpa), String.valueOf(res.getInt("id")));
            }
            MyData.commandUpdate("UPDATE STUDENT SET cgpa = temp/total_credit");
            JOptionPane.showMessageDialog(null, "CGPA Updated");
            // UPDATE CGPA IN student table
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "GP cannot update");
        }
    }//GEN-LAST:event_submitResultActionPerformed

    private void teacherCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teacherCourseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teacherCourseActionPerformed

    private void todaysClassesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_todaysClassesActionPerformed
        tm.setVisible(false);
        TeacherRoutine.teacherRoutine(String.valueOf(teacherCourse.getSelectedItem()));
    }//GEN-LAST:event_todaysClassesActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void teacher_menu() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Teacher_menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Teacher_menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Teacher_menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Teacher_menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            tm.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton attendance;
    private javax.swing.JButton backToLogin;
    private javax.swing.JButton chengePassword;
    private javax.swing.JButton coursePlan;
    private javax.swing.JLabel courseUpdater;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton mark;
    private javax.swing.JButton submitResult;
    private javax.swing.JComboBox<String> teacherCourse;
    private javax.swing.JPanel teacher_panel;
    private javax.swing.JButton todaysClasses;
    private javax.swing.JButton updateStudents;
    // End of variables declaration//GEN-END:variables
}
